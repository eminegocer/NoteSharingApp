@model List<Note>

<div class="flex h-screen bg-gray-100">
    <!-- Sol Panel: Sohbetler (1/4) -->
    <aside id="chatSidebar" class="w-1/4 bg-white shadow-lg p-4 m-2 rounded-lg overflow-y-auto">
        <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-bold text-purple-400">Sohbetler</h2>
            <i class="fas fa-comments text-purple-400"></i>
        </div>
        <div class="space-y-4">
            <div class="bg-gray-50 p-4 rounded-lg">
                <h3 class="text-md font-semibold text-gray-800 mb-2">Kişisel Sohbetler</h3>
                <ul id="personalChatsList" class="space-y-2">
                    @if (ViewBag.ChatUsers != null && ViewBag.ChatUsers.Count > 0)
                    {
                        @foreach (var username in ViewBag.ChatUsers)
                        {
                            <li onclick="loadChat('@username')" class="p-3 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors cursor-pointer flex items-center gap-2">
                                <i class="fas fa-user-circle text-purple-400"></i>
                                <span>@username</span>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="p-3 bg-purple-50 rounded-lg text-gray-500 text-center">
                            Henüz sohbet bulunmuyor
                        </li>
                    }
                </ul>
            </div>
            
            <div class="bg-gray-50 p-4 rounded-lg">
                <h3 class="text-md font-semibold text-gray-800 mb-2">Grup Sohbetleri</h3>
                <ul class="space-y-2">
                    <li class="p-3 bg-purple-50 rounded-lg text-gray-500 text-center">
                        Henüz sohbet bulunmuyor
                    </li>
                </ul>
            </div>

            <div class="bg-gray-50 p-4 rounded-lg">
                <h3 class="text-md font-semibold text-gray-800 mb-2">Okul Grupları</h3>
                <ul class="space-y-2">
                    <li class="p-3 bg-purple-50 rounded-lg text-gray-500 text-center">
                        Henüz sohbet bulunmuyor
                    </li>
                </ul>
            </div>
        </div>
    </aside>

    <!-- Orta Panel -->
    <main class="w-1/2 p-6 m-2 bg-white shadow-lg rounded-lg overflow-y-auto">
        <!-- Ana sayfa içeriği (notlar) -->
        <div id="mainContent">
            <div class="flex items-center justify-between mb-6">
                <div>
                    <h1 class="text-2xl font-bold text-purple-500">Son Eklenen Notlar</h1>
                    <p class="text-sm text-gray-600/70 mt-1">Paylaşılan en güncel notlar</p>
                </div>
                <a asp-controller="Notes" 
                   asp-action="AddNote" 
                   class="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg transition-all duration-300 flex items-center gap-2 shadow-md hover:shadow-lg transform hover:-translate-y-0.5">
                    <i class="fas fa-plus text-sm"></i>
                    <span>Yeni Not</span>
                </a>
            </div>

            <div class="space-y-4">
                @if (Model == null || !Model.Any())
                {
                    <div class="flex flex-col items-center justify-center p-8 bg-gray-50 rounded-lg border-2 border-dashed border-gray-200">
                        <i class="fas fa-notebook mb-3 text-3xl text-gray-400"></i>
                        <p class="text-gray-600 text-center">Henüz paylaşılmış not bulunmuyor.</p>
                        <p class="text-gray-400 text-sm mt-1">İlk notu siz paylaşın!</p>
                    </div>
                }
                else
                {
                    @foreach (var note in Model)
                    {
                        <div class="group bg-blue-50 hover:bg-white rounded-xl p-6 transition-all duration-300 border border-gray-100 hover:border-gray-200 hover:shadow-lg">
                            <div class="flex items-start justify-between mb-3">
                                <div class="flex-1">
                                    <h3 class="text-lg font-semibold text-gray-800 group-hover:text-gray-900">@note.Title</h3>
                                    <div class="flex items-center gap-3 mt-2">
                                        <span class="px-3 py-1 bg-gray-100/50 text-gray-600 rounded-full text-xs">
                                            <i class="fas fa-book-open mr-1"></i>
                                            Sayfa: @note.Page
                                        </span>
                                        <span class="px-3 py-1 bg-gray-100/50 text-gray-600 rounded-full text-xs">
                                            <i class="fas fa-user mr-1"></i>
                                            @note.OwnerUsername
                                        </span>
                                        <span class="px-3 py-1 bg-gray-100/50 text-gray-600 rounded-full text-xs">
                                            <i class="fas fa-folder mr-1"></i>
                                            @note.Category
                                        </span>
                                        <span class="px-3 py-1 bg-gray-100/50 text-gray-600 rounded-full text-xs">
                                            <i class="fas fa-clock mr-1"></i>
                                            @note.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                                        </span>
                                    </div>
                                </div>
                                <div class="flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                    <a href="@note.PdfFilePath" target="_blank" 
                                       class="p-2 text-gray-500 hover:text-purple-600 hover:bg-gray-100 rounded-lg transition-colors">
                                        <i class="fas fa-file-pdf"></i>
                                    </a>
                                    <button class="p-2 text-gray-500 hover:text-purple-600 hover:bg-gray-100 rounded-lg transition-colors">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="p-2 text-gray-500 hover:text-red-600 hover:bg-gray-100 rounded-lg transition-colors">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                            
                            <p class="text-gray-600 mb-3 line-clamp-2 group-hover:line-clamp-none transition-all duration-300">
                                @note.Content
                            </p>

                            <div class="mt-4 pt-4 border-t border-gray-100">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center space-x-2">
                                        <button class="text-gray-500 hover:text-purple-600 text-sm flex items-center gap-1">
                                            <i class="fas fa-share-alt"></i>
                                            <span>Paylaş</span>
                                        </button>
                                    </div>
                                    <button class="text-gray-500 hover:text-purple-600 text-sm flex items-center gap-1">
                                        <i class="fas fa-download"></i>
                                        <span>PDF İndir</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Sohbet içeriği (başlangıçta gizli) -->
        <div id="chatContent" class="hidden h-full">
            <!-- Sohbet içeriği buraya yüklenecek -->
        </div>
    </main>

    <!-- Sağ Panel: Sohbet Başlat (1/4) -->
    <aside class="w-1/4 bg-white shadow-lg p-4 m-2 rounded-lg">
        <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-bold text-purple-400">Yeni Sohbet</h2>
            <i class="fas fa-comments text-purple-400"></i>
        </div>

        <!-- Kişisel Sohbet -->
        <div class="space-y-3 mb-3">
            <h3 class="text-sm font-semibold text-gray-700">Kişisel Sohbet</h3>
            <div class="space-y-3">
                <form asp-action="AddChatDb" method="post" onsubmit="return handleChatSubmit(event)">
                    <div class="relative">
                        <input type="text"
                               name="userName"
                               id="userSearchInput"
                               class="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-purple-400 outline-none mb-3"
                               placeholder="Kullanıcı adı girin...">
                        <div id="userSuggestions"
                             class="absolute left-0 right-0 top-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-48 overflow-y-auto">
                        </div>
                    </div>
                    <button type="submit" class="w-full bg-purple-500 hover:bg-purple-600 text-white font-semibold p-3 rounded-lg transition-colors flex items-center justify-center gap-2">
                        <i class="fas fa-user-plus"></i>
                        <span>Kişisel Sohbet Başlat</span>
                    </button>
                </form>

                <!-- Chat Panel (Başlatılan sohbet burada görünecek) -->
                <div id="chatPanel" class="hidden mt-6">
                    <!-- Buraya Chat partial view'ı dinamik olarak ekleyeceğiz -->
                </div>
            </div>
        </div>

        <!-- Grup Ara -->
        <div class="space-y-3 mb-6">
            <h3 class="text-sm font-semibold text-gray-700">Grup Ara</h3>
            <div class="space-y-3">
                <div class="relative">
                    <input type="text"
                           id="schoolGroupSearchInput"
                           class="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-purple-400 outline-none"
                           placeholder="Bölüm adı veya okul adı girin...">
                    <div id="schoolGroupSuggestions"
                         class="absolute left-0 right-0 top-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-48 overflow-y-auto">
                    </div>
                </div>
                <button onclick="searchSchoolGroups()" class="w-full bg-purple-500 hover:bg-purple-600 text-white font-semibold p-3 rounded-lg transition-colors flex items-center justify-center gap-2">
                    <i class="fas fa-school"></i>
                    <span>Okul/Bölüm Ara</span>
                </button>
            </div>
        </div>

        <!-- Grup Oluştur -->
        <div class="space-y-3 mb-6">
            <h3 class="text-sm font-semibold text-gray-700">Yeni Grup</h3>
            <div class="space-y-3">
                <input type="text"
                       id="groupNameInput"
                       class="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-400 focus:border-purple-400 outline-none"
                       placeholder="Grup adı girin...">
                <button onclick="createGroup()" class="w-full bg-purple-500 hover:bg-purple-600 text-white font-semibold p-3 rounded-lg transition-colors flex items-center justify-center gap-2">
                    <i class="fas fa-users"></i>
                    <span>Grup Oluştur</span>
                </button>
            </div>
        </div>


        <script>
            document.addEventListener('DOMContentLoaded', function () {
                let typingTimer;
                const doneTypingInterval = 300;

                // Kullanıcı arama input olayı
                const userSearchInput = document.getElementById('userSearchInput');
                const suggestionsDiv = document.getElementById('userSuggestions');

                userSearchInput.addEventListener('input', function() {
                    const searchTerm = this.value.trim();

                    if (searchTerm.length < 2) {
                        suggestionsDiv.classList.add('hidden');
                        return;
                    }

                    clearTimeout(typingTimer);
                    typingTimer = setTimeout(() => {
                        searchUsers(searchTerm);
                    }, doneTypingInterval);
                });

                // Form submit işlemi
                window.handleChatSubmit = function(event) {
                    event.preventDefault();
                    const userName = userSearchInput.value.trim();
                    
                    if (!userName) {
                        alert('Lütfen bir kullanıcı adı girin.');
                        return false;
                    }

                    fetch('/Notes/AddChatDb', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: `userName=${encodeURIComponent(userName)}`
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            loadChat(data.targetUsername);
                            updatePersonalChatsList(data.targetUsername);
                            userSearchInput.value = '';
                            suggestionsDiv.classList.add('hidden');
                        } else {
                            alert(data.message || 'Sohbet başlatılırken bir hata oluştu.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Bir hata oluştu. Lütfen tekrar deneyin.');
                    });

                    return false;
                };

                // Kullanıcı arama
                function searchUsers(searchTerm) {
                    fetch(`/Notes/SearchUsers?searchTerm=${encodeURIComponent(searchTerm)}`)
                        .then(response => response.json())
                        .then(users => {
                            suggestionsDiv.innerHTML = '';

                            if (users && users.length > 0) {
                                users.forEach(username => {
                                    const suggestion = document.createElement('div');
                                    suggestion.className = 'p-3 hover:bg-purple-50 cursor-pointer transition-colors border-b border-gray-100 last:border-0';
                                    suggestion.innerHTML = `
                                        <div class="flex items-center gap-2">
                                            <i class="fas fa-user text-purple-400"></i>
                                            <span class="text-gray-700">${username}</span>
                                        </div>
                                    `;
                                    suggestion.onclick = () => {
                                        userSearchInput.value = username;
                                        suggestionsDiv.classList.add('hidden');
                                    };
                                    suggestionsDiv.appendChild(suggestion);
                                });
                                suggestionsDiv.classList.remove('hidden');
                            } else {
                                const noResult = document.createElement('div');
                                noResult.className = 'p-3 text-center text-gray-500';
                                noResult.textContent = 'Sonuç bulunamadı';
                                suggestionsDiv.appendChild(noResult);
                                suggestionsDiv.classList.remove('hidden');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            suggestionsDiv.innerHTML = '<div class="p-3 text-center text-red-500">Bir hata oluştu</div>';
                            suggestionsDiv.classList.remove('hidden');
                        });
                }

                // Sohbet yükleme
                window.loadChat = function(username) {
                    fetch(`/Notes/ChatView?targetUsername=${encodeURIComponent(username)}`)
                        .then(response => response.text())
                        .then(html => {
                            const mainContent = document.getElementById('mainContent');
                            const chatContent = document.getElementById('chatContent');

                            mainContent.classList.add('hidden');
                            chatContent.innerHTML = html;
                            chatContent.classList.remove('hidden');
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Sohbet yüklenirken bir hata oluştu.');
                        });
                };

                // Sohbet listesi güncelleme
                window.updatePersonalChatsList = function(newUsername) {
                    const personalChatsList = document.getElementById('personalChatsList');
                    const existingChats = personalChatsList.querySelectorAll('li');

                    if (existingChats.length === 1 && existingChats[0].classList.contains('text-center')) {
                        personalChatsList.innerHTML = '';
                    }

                    const existingChat = Array.from(existingChats).find(chat =>
                        chat.textContent.trim() === newUsername
                    );

                    if (!existingChat) {
                        const newChatItem = document.createElement('li');
                        newChatItem.className = 'p-3 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors cursor-pointer flex items-center gap-2';
                        newChatItem.onclick = () => loadChat(newUsername);
                        newChatItem.innerHTML = `
                            <i class="fas fa-user-circle text-purple-400"></i>
                            <span>${newUsername}</span>
                        `;
                        personalChatsList.insertBefore(newChatItem, personalChatsList.firstChild);
                    }
                };

                // Tıklama olayları
                document.addEventListener('click', function(e) {
                    if (!userSearchInput.contains(e.target) && !suggestionsDiv.contains(e.target)) {
                        suggestionsDiv.classList.add('hidden');
                    }
                });

                // Global closeChat fonksiyonu
                window.closeChat = function() {
                    const mainContent = document.getElementById('mainContent');
                    const chatContent = document.getElementById('chatContent');
                    
                    chatContent.innerHTML = '';
                    chatContent.classList.add('hidden');
                    mainContent.classList.remove('hidden');
                };

                function searchSchoolGroups(searchTerm) {
                    fetch(`/Notes/GetGroup?searchTerm=${encodeURIComponent(searchTerm)}`)
                        .then(response => response.json())
                        .then(groups => {
                            const suggestionsDiv = document.getElementById('schoolGroupSuggestions');
                            suggestionsDiv.innerHTML = '';

                            if (groups && groups.length > 0) {
                                groups.forEach(group => {
                                    const suggestion = document.createElement('div');
                                    suggestion.className = 'p-3 hover:bg-purple-50 cursor-pointer transition-colors border-b border-gray-100 last:border-0';
                                    suggestion.innerHTML = `
                                        <div class="flex flex-col gap-1">
                                            <div class="flex items-center gap-2">
                                                <i class="fas fa-users text-purple-400"></i>
                                                <span class="text-gray-700 font-semibold">${group.groupName}</span>
                                            </div>
                                            <div class="flex items-center gap-2 text-sm text-gray-500">
                                                <i class="fas fa-school text-purple-300"></i>
                                                <span>${group.schoolName}</span>
                                            </div>
                                            <div class="flex items-center gap-2 text-sm text-gray-500">
                                                <i class="fas fa-graduation-cap text-purple-300"></i>
                                                <span>${group.departmentName}</span>
                                            </div>
                                        </div>
                                    `;
                                    suggestion.onclick = () => {
                                        document.getElementById('schoolGroupSearchInput').value = group.groupName;
                                        suggestionsDiv.classList.add('hidden');
                                    };
                                    suggestionsDiv.appendChild(suggestion);
                                });
                                suggestionsDiv.classList.remove('hidden');
                            } else {
                                const noResult = document.createElement('div');
                                noResult.className = 'p-3 text-center text-gray-500';
                                noResult.textContent = 'Sonuç bulunamadı';
                                suggestionsDiv.appendChild(noResult);
                                suggestionsDiv.classList.remove('hidden');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            const suggestionsDiv = document.getElementById('schoolGroupSuggestions');
                            suggestionsDiv.innerHTML = '<div class="p-3 text-center text-red-500">Bir hata oluştu</div>';
                            suggestionsDiv.classList.remove('hidden');
                        });
                }

                // Okul/Bölüm arama input olayı
                document.getElementById('schoolGroupSearchInput').addEventListener('input', function() {
                    const searchTerm = this.value.trim();
                    const suggestionsDiv = document.getElementById('schoolGroupSuggestions');

                    if (searchTerm.length < 2) {
                        suggestionsDiv.classList.add('hidden');
                        return;
                    }

                    clearTimeout(typingTimer);
                    typingTimer = setTimeout(() => {
                        searchSchoolGroups(searchTerm);
                    }, doneTypingInterval);
                });

                // Tıklama olayları için event listener
                document.addEventListener('click', function(e) {
                    const suggestionsDiv = document.getElementById('schoolGroupSuggestions');
                    const searchInput = document.getElementById('schoolGroupSearchInput');
                    
                    if (!searchInput.contains(e.target) && !suggestionsDiv.contains(e.target)) {
                        suggestionsDiv.classList.add('hidden');
                    }
                });

                function createGroup() {
                    const groupName = document.getElementById('groupNameInput').value.trim();
                    if (!groupName) {
                        alert('Lütfen bir grup adı girin.');
                        return;
                    }

                    fetch('/Notes/CreateGroup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ groupName })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Grup başarıyla oluşturuldu!');
                        } else {
                            alert('Grup oluşturulamadı: ' + data.message);
                        }
                    })
                    .catch(error => console.error('Error:', error));
                }
            });
        </script>
